tosca_definitions_version: cloudify_dsl_1_2

########################################################

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3m6/types.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/tosca-vcloud-plugin/TI/plugin.yaml
  - diamond.yaml

########################################################

plugins:
    dns-plugin:
        executor: host_agent
        source: dns-plugin

########################################################

relationships:
    dns_client_uses_dns_server:
       derived_from: cloudify.relationships.connected_to
       source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
             preconfigure: dns-plugin.dns_plugin.tasks.configure_resolv_conf

########################################################

node_types:

    policy_node_type:
       derived_from: cloudify.nodes.SoftwareComponent
       properties:
          nodes_to_monitor:
             default: [] 
       interfaces:
          cloudify.interfaces.lifecycle:
             start:
                implementation: scripts/policy-start.sh
                executor: central_deployment_agent
             stop:
                implementation: scripts/policy-stop.sh
                executor: central_deployment_agent

    vcloud_configuration:
        derived_from: cloudify.nodes.Root
        properties:
            vcloud_config: {}

########################################################

inputs:

    vcloud_username:
        type: string

    vcloud_password:
        type: string
        default: ''

    vcloud_token:
        type: string
        default: ''

    vcloud_url:
        type: string

    vcloud_service:
        type: string

    vcloud_service_type:
        type: string
        default: 'subscription'

    vcloud_instance:
        type: string
        default: ''

    vcloud_api_version:
        type: string
        default: '5.6'

    vcloud_org_url:
        type: string
        default: ''

    vcloud_org:
        type: string

    vcloud_vdc:
        type: string

    catalog:
        type: string
        default: Public Catalog

    ssl_verify:
      type: boolean
      default: false
      description: >
          ssl check for connections to private services
          (disable self-signed certificates)

#######################################################

    template:
        type: string
        description: should be Ubuntu Server 14.04 LTS (amd64)

    server_cpu:
        type: string
        default: 2

    server_memory:
        type: string
        default: 4096

#######################################################

    server_user:
        type: string

    manager_public_key:
        type: string

    manager_privat_key_path:
        type: string

#######################################################

    common_network_public_nat_use_existing:
        type: boolean

    network_use_existing:
        type: boolean

    common_network_name:
        type: string

    edge_gateway:
        type: string

    common_network_static_ip_range:
        type: string
        default: 10.67.90.129-10.67.90.254

    common_network_mask:
        type: string
        default: 255.255.255.0

    common_network_gateway_ip:
        type: string
        default: 10.67.90.1

    common_network_dns:
        default:
            - 10.67.90.1
            - 8.8.8.8

    common_network_dhcp_range:
        type: string
        default: 10.67.90.2-10.67.90.128

#######################################################

    clearwater_public_ip:
        type: string

#######################################################

    bono_public_ip:
        type: string

#######################################################

    ellis_public_ip:
        type: string

########################################################

node_templates:

########################################################
# A NODE
########################################################

    a_node:
        type: cloudify.nodes.Compute
        properties:
           install_agent: false

########################################################
# SSH
########################################################

    common_ssh_keypair:
        type: cloudify.vcloud.nodes.KeyPair
        properties:
            public_key:
                user: { get_input: server_user }
                key: { get_input: manager_public_key }
            private_key:
                path: { get_input: manager_privat_key_path }

########################################################
# CREDENTIALS
########################################################

    vcloud_configuration:
        type: vcloud_configuration
        properties:
            vcloud_config:
                username: { get_input: vcloud_username }
                password: { get_input: vcloud_password }
                token: { get_input: vcloud_token }
                url: { get_input: vcloud_url }
                service: { get_input: vcloud_service }
                org: { get_input: vcloud_org }
                vdc: { get_input: vcloud_vdc }
                service_type: { get_input: vcloud_service_type }
                instance: { get_input: vcloud_instance }
                api_version: { get_input: vcloud_api_version }
                org_url: { get_input: vcloud_org_url }
                edge_gateway: { get_input: edge_gateway }
                ssl_verify: { get_input: ssl_verify }

########################################################
# COMMON NETWORK CONFIGURATION
########################################################

    common_network:
        type: cloudify.vcloud.nodes.Network
        properties:
            use_external_resource: { get_input: network_use_existing }
            resource_id: { get_input: common_network_name }
            network:
                name: { get_input: common_network_name }
                edge_gateway: { get_input: edge_gateway }
                static_range: { get_input: common_network_static_ip_range }
                netmask: { get_input: common_network_mask }
                gateway_ip: { get_input: common_network_gateway_ip }
                dns: { get_input: common_network_dns }
                dhcp:
                    dhcp_range: { get_input: common_network_dhcp_range }
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }
        relationships:
            - target: common_network_nat
              type: cloudify.vcloud.net_connected_to_public_nat

########################################################
# COMMON NETWORK NAT CONFIGURATION
########################################################

    common_network_nat:
        type: cloudify.vcloud.nodes.PublicNAT
        properties:
            use_external_resource: { get_input: common_network_public_nat_use_existing }
            nat:
                edge_gateway: { get_input: edge_gateway }
                public_ip: { get_input: clearwater_public_ip }
            rules:
                - type: SNAT
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }

########################################################
# BONO VM NAT CONFIGURATION
########################################################

    bono_vm_nat:
        type: cloudify.vcloud.nodes.PublicNAT
        properties:
            nat:
                edge_gateway: { get_input: edge_gateway }
                public_ip: { get_input: bono_public_ip}
            rules:
             - type: DNAT
               protocol: tcp
               original_port: 5060
               translated_port: 5060
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }

########################################################
# BONO VM CONFIGURATION
########################################################

    bono_vm:
        type: cloudify.vcloud.nodes.Server
        properties:
            server:
                catalog: { get_input: catalog }
                template: { get_input: template }
                guest_customization:
                    public_keys:
                        - { get_property: [common_ssh_keypair, public_key] }
                hardware:
                    cpu: { get_input: server_cpu }
                    memory: { get_input: server_memory }
            management_network: { get_input: common_network_name }
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }
        interfaces:
            cloudify.interfaces.monitoring_agent:
               install:
                  implementation: diamond.diamond_agent.tasks.install
                  inputs:
                     diamond_config:
                        interval: 5
               start: diamond.diamond_agent.tasks.start
               stop: diamond.diamond_agent.tasks.stop
               uninstall: diamond.diamond_agent.tasks.uninstall

            cloudify.interfaces.monitoring:
               start:
                  implementation: diamond.diamond_agent.tasks.add_collectors
                  inputs:
                     collectors_config:
                           CPUCollector: {}
        relationships:
            - target: common_ssh_keypair
              type: cloudify.vcloud.server_connected_to_keypair
            - target: bono_vm_nat
              type: cloudify.vcloud.server_connected_to_public_nat
            - target: node_security_group
              type: cloudify.vcloud.server_connected_to_security_group
            - target: common_network
              type: cloudify.vcloud.server_connected_to_network

########################################################
# ELLIS VM NAT CONFIGURATION
########################################################

    ellis_vm_nat:
        type: cloudify.vcloud.nodes.PublicNAT
        properties:
            nat:
                edge_gateway: { get_input: edge_gateway }
                public_ip: { get_input: ellis_public_ip }
            rules:
             - type: DNAT
               protocol: tcp
               original_port: 80
               translated_port: 80
             - type: DNAT
               protocol: tcp
               original_port: 8088
               translated_port: 8088
             - type: DNAT
               protocol: tcp
               original_port: 53
               translated_port: 53
             - type: DNAT
               protocol: tcp
               original_port: 8888
               translated_port: 8888
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }

########################################################
# ELLIS VM CONFIGURATION
########################################################

    ellis_vm:
        type: cloudify.vcloud.nodes.Server
        properties:
            server:
                catalog: { get_input: catalog }
                template: { get_input: template }
                guest_customization:
                    public_keys:
                        - { get_property: [common_ssh_keypair, public_key] }
                hardware:
                    cpu: { get_input: server_cpu }
                    memory: { get_input: server_memory }
            management_network: { get_input: common_network_name }
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }
        relationships:
            - target: common_ssh_keypair
              type: cloudify.vcloud.server_connected_to_keypair
            - target: ellis_vm_nat
              type: cloudify.vcloud.server_connected_to_public_nat
            - target: node_security_group
              type: cloudify.vcloud.server_connected_to_security_group
            - target: common_network
              type: cloudify.vcloud.server_connected_to_network

########################################################
# SPROUT VM CONFIGURATION
########################################################

    sprout_vm:
        type: cloudify.vcloud.nodes.Server
        properties:
            server:
                catalog: { get_input: catalog }
                template: { get_input: template }
                guest_customization:
                    public_keys:
                        - { get_property: [common_ssh_keypair, public_key] }
                hardware:
                    cpu: { get_input: server_cpu }
                    memory: { get_input: server_memory }
            management_network: { get_input: common_network_name }
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }
        interfaces:
            cloudify.interfaces.monitoring_agent:
               install:
                  implementation: diamond.diamond_agent.tasks.install
                  inputs:
                     diamond_config:
                        interval: 5
               start: diamond.diamond_agent.tasks.start
               stop: diamond.diamond_agent.tasks.stop
               uninstall: diamond.diamond_agent.tasks.uninstall

            cloudify.interfaces.monitoring:
               start:
                  implementation: diamond.diamond_agent.tasks.add_collectors
                  inputs:
                     collectors_config:
                           CPUCollector: {}
        relationships:
            - target: common_ssh_keypair
              type: cloudify.vcloud.server_connected_to_keypair
            - target: node_security_group
              type: cloudify.vcloud.server_connected_to_security_group
            - target: common_network
              type: cloudify.vcloud.server_connected_to_network

########################################################
# HOMER VM CONFIGURATION
########################################################

    homer_vm:
        type: cloudify.vcloud.nodes.Server
        properties:
            server:
                catalog: { get_input: catalog }
                template: { get_input: template }
                guest_customization:
                    public_keys:
                        - { get_property: [common_ssh_keypair, public_key] }
                hardware:
                    cpu: { get_input: server_cpu }
                    memory: { get_input: server_memory }
            management_network: { get_input: common_network_name }
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }
        relationships:
            - target: common_ssh_keypair
              type: cloudify.vcloud.server_connected_to_keypair
            - target: node_security_group
              type: cloudify.vcloud.server_connected_to_security_group
            - target: common_network
              type: cloudify.vcloud.server_connected_to_network

########################################################
# HOMESTEAD VM CONFIGURATION
########################################################

    homestead_vm:
        type: cloudify.vcloud.nodes.Server
        properties:
            server:
                catalog: { get_input: catalog }
                template: { get_input: template }
                guest_customization:
                    public_keys:
                        - { get_property: [common_ssh_keypair, public_key] }
                hardware:
                    cpu: { get_input: server_cpu }
                    memory: { get_input: server_memory }
            management_network: { get_input: common_network_name }
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }
        relationships:
            - target: common_ssh_keypair
              type: cloudify.vcloud.server_connected_to_keypair
            - target: node_security_group
              type: cloudify.vcloud.server_connected_to_security_group
            - target: common_network
              type: cloudify.vcloud.server_connected_to_network

########################################################
# RALF VM CONFIGURATION
########################################################

    ralf_vm:
        type: cloudify.vcloud.nodes.Server
        properties:
            server:
                catalog: { get_input: catalog }
                template: { get_input: template }
                guest_customization:
                    public_keys:
                        - { get_property: [common_ssh_keypair, public_key] }
                hardware:
                    cpu: { get_input: server_cpu }
                    memory: { get_input: server_memory }
            management_network: { get_input: common_network_name }
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }
        relationships:
            - target: common_ssh_keypair
              type: cloudify.vcloud.server_connected_to_keypair
            - target: node_security_group
              type: cloudify.vcloud.server_connected_to_security_group
            - target: common_network
              type: cloudify.vcloud.server_connected_to_network

########################################################
# DNS VM CONFIGURATION
########################################################

    dns_vm:
        type: cloudify.vcloud.nodes.Server
        properties:
            server:
                catalog: { get_input: catalog }
                template: { get_input: template }
                guest_customization:
                    public_keys:
                        - { get_property: [common_ssh_keypair, public_key] }
                hardware:
                    cpu: { get_input: server_cpu }
                    memory: { get_input: server_memory }
            management_network: { get_input: common_network_name }
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }
        relationships:
            - target: common_ssh_keypair
              type: cloudify.vcloud.server_connected_to_keypair
            - target: node_security_group
              type: cloudify.vcloud.server_connected_to_security_group
            - target: common_network
              type: cloudify.vcloud.server_connected_to_network

########################################################
# CLEARWATER SECURITY GROUPS CONFIGURATION
########################################################

    node_security_group:
        type: cloudify.vcloud.nodes.SecurityGroup
        properties:
            security_group:
                name: nodevcloud_security_group
                edge_gateway: { get_input: edge_gateway }
            rules:
                - source: any
                  destination: any
                  action: allow
                  protocol: any
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }

########################################################
# CLEARWATER POLICY NODE CONFIGURATION
########################################################

    policy_node:
        type: policy_node_type
        relationships:
           - target: bono_vm
             type: cloudify.relationships.depends_on
           - target: sprout_vm
             type: cloudify.relationships.depends_on
           - target: a_node
             type: cloudify.relationships.contained_in
        properties:
           nodes_to_monitor:
              - bono_vm
              - sprout_vm

########################################################
# BONO APP
########################################################

    bono_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/bono.sh
                 inputs:
                    public_ip: { get_input: bono_public_ip }
                    dns_ip: { get_attribute: [dns_vm, ip]  }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: bono_vm
            -  type: dns_client_uses_dns_server
               target: dns_app



########################################################
# ELLIS APP
########################################################

    ellis_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/ellis.sh
                 inputs:
                    public_ip: { get_input: ellis_public_ip }
                    dns_ip: { get_attribute: [dns_vm, ip] }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: ellis_vm
            -  type: dns_client_uses_dns_server
               target: dns_app

########################################################
# RALF APP
########################################################

    ralf_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/ralf.sh
                 inputs:
                    dns_ip: { get_attribute: [dns_vm, ip] }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: ralf_vm
            -  type: dns_client_uses_dns_server
               target: dns_app

########################################################
# HOMESTEAD APP
########################################################

    homestead_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/homestead.sh
                 inputs:
                    dns_ip: { get_attribute: [dns_vm, ip]  }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: homestead_vm
            -  type: dns_client_uses_dns_server
               target: dns_app

########################################################
# HOMER APP
########################################################

    homer_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/homer.sh
                 inputs:
                    dns_ip: { get_attribute: [dns_vm, ip]  }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: homer_vm
            -  type: dns_client_uses_dns_server
               target: dns_app

########################################################
# SPROUT APP
########################################################

    sprout_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/sprout.sh
                 inputs:
                    dns_ip: { get_attribute: [dns_vm, ip]  }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: sprout_vm
            -  type: dns_client_uses_dns_server
               target: dns_app

########################################################
# DNS APP
########################################################

    dns_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/dns.sh
                 inputs:
                    dns_ip: { get_attribute: [dns_vm, ip] }
                    process:
                       command_prefix: /usr/bin/sudo
        relationships:
            -  type: cloudify.relationships.contained_in
               target: dns_vm

    dns_app_config:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/dns-config.sh
                 inputs:
                    process:
                       command_prefix: /usr/bin/sudo
        relationships:
                -  type: cloudify.relationships.contained_in
                   target: dns_vm
                -  type: cloudify.relationships.connected_to
                   target: dns_app
                -  type: cloudify.relationships.connected_to
                   target: bono_app
                -  type: cloudify.relationships.connected_to
                   target: ellis_app
                -  type: cloudify.relationships.connected_to
                   target: ralf_app
                -  type: cloudify.relationships.connected_to
                   target: sprout_app
                -  type: cloudify.relationships.connected_to
                   target: homer_app
                -  type: cloudify.relationships.connected_to
                   target: homestead_app
